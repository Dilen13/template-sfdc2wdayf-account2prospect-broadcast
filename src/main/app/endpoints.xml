<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.6.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

	<data-mapper:config name="XML_To_Account"
		transformationGraphPath="xml_to_account.grf" doc:name="XML_To_Account" />
	<flow name="triggerPushFlow" initialState="started">
		<http:listener config-ref="HTTP_connector" path="/migrateAccounts"
			doc:name="Start Synchronization">
			<http:response-builder statusCode="200">
                <http:header headerName="content-type" value="application/xml"/>

			</http:response-builder>
		</http:listener>
		<choice doc:name="Trigger Policy">
			<when expression="#['push' == '${trigger.policy}']">
				<object-to-string-transformer doc:name="Object to String" />
				<logger message="Message from outbound : #[payload]" level="INFO"
					doc:name="Log input payload" />
				<data-mapper:transform config-ref="XML_To_Account"
					doc:name="XML To Account" />
				<batch:execute name="syncAccountsBatch"
					doc:name="Trigger Batch execute for Upsert in Workday" />
			</when>
			<otherwise>
				<logger message="Trigger policy has been set to POLL. Skipping this message"
					level="INFO" doc:name="Logger" />
			</otherwise>
		</choice>
		<set-payload
			value="&lt;soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:out='http://soap.sforce.com/2005/09/outbound'&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;&lt;out:notificationsResponse&gt;&lt;out:Ack&gt;true&lt;/out:Ack&gt;&lt;/out:notificationsResponse&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;"
			doc:name="set response body" />
	</flow>
	<flow name="triggerFlow" processingStrategy="synchronous"
		doc:description="This is the simpliest entry point to start the excecution of your Template
Here you should: 
	* Configure the inbound endpoint, in this case a polling to fetch data from origin system
	* Handle any input parameter and set the scope of it so the main logic does not care from where it is called" initialState="started">
        <poll doc:name="Salesforce for accounts">
            <fixed-frequency-scheduler frequency="${poll.frequencyMillis}" startDelay="${poll.startDelayMillis}"/>
            <watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
            <sfdc:query config-ref="Salesforce" query="dsql:SELECT BillingAddress,Description,Id,Industry,Name,Phone,Type,Website 
FROM Account WHERE LastModifiedDate &gt; #[lastQueryDate] AND Type = 'Prospect'" fetchSize="${page.size}" doc:name="Query Accounts with filtering criteria from Salesforce"/>
        </poll>

		<choice doc:name="Choice">
			<when expression="#['poll' == '${trigger.policy}']">
				<batch:execute name="syncAccountsBatch"
					doc:name="Trigger Batch execute for Upsert in Workday" />
			</when>
			<otherwise>
				<logger message="Trigger policy has been set to PUSH. Skipping this message"
					level="INFO" doc:name="Logger" />
			</otherwise>
		</choice>
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Reference Exception Strategy" />
	</flow>

</mule>